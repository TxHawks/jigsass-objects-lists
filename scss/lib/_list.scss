// *************************************
//
// # List mixin
// -> Include list abstractions
//
// *************************************

@charset 'UTF-8';


// -------------------------------------
// Dependencies
// -------------------------------------

//





// -------------------------------------
// Variables
// -------------------------------------

//





// -------------------------------------
// Functions
// -------------------------------------

//





// -------------------------------------
// Mixins
// -------------------------------------

// stylelint-disable
/* ---
section: Lists
title: List mixin
order: 0
---
```scss
@mixin jigsass-list($abstraction, $modifier: false, $from: false, $until: false, $misc: false) { ... }
```


#### Description
Generate a list abstraction or an abstraction's modifier,
optionally limited to a specific breakpoint defined in
[$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)).


#### Parameters
Name | Description | Type | Default Value
--- | --- | --- | ---
`$abstraction` | A list abstraction (e.g., `bare`, `inline`, etc.) | `String`
`$modifier` | A list-abstraction's modifier, e.g., `bare`, `inline`, etc.| `String` or `Boolean` | false
`$from` | The name of breakpoint used as the min-width condition | `String` or `Boolean` | false
`$until` | The name of breakpoint used as the max-width condition | `String` or `Boolean` | false
`$misc` | The name of a miscellaneous media query condition | `String` or `Boolean` | false


#### Example
```scss
@include jigsass-list(inline, $from: medium);
```

Will generate:
```scss
@media (min-width: 37.5em) {
  .o-inline-list--from-medium { ... }
}
```
*/
// stylelint-enable
/// Generate a list abstraction or an abstraction's modifier,
/// optionally limited to a specific breakpoint.
/// ---
/// @param {String} $abstraction
///   A list abstraction (e.g., `bare`, `inline`, etc.).
/// @param {String | Boolean} $modifier [false]
///   A list abstraction's modifier, if relevant.
/// @param {String | Boolean} $from [false]
///   The name of breakpoint used as the min-width condition.
/// @param {String | Boolean} $until [false]
///   The name of breakpoint used as the max-width condition.
/// @param {String | Boolean} $misc [false]
///   The name of a miscellaneous media query condition.
/// ---
/// @example scss - SCSS input
///   @include jigsass-list(inline, $from: medium);
///
/// @example scss - CSS output
///   @media (min-width: 37.5em) {
///     .o-inline-list--from-medium { ... }
///   }
/// ---
@mixin jigsass-list($abstraction, $modifier: false, $from: false, $until: false, $misc: false) {
  @if (not mixin-exists(jigsass-object)) {
    @error '`jigsass-objects-lists` has a dependency on `jigsass-tools-selectors. ' +
      'Please import it.';
  }
  $name: o-#{$abstraction}-list;

  @include jigsass-object($name, $from, $until, $misc, $modifier);
}
