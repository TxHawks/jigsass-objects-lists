// *************************************
//
// # Bare List
// -> Removes list decorations
//
////
/// @group Lists
////
//
// *************************************

@charset 'UTF-8';


// -------------------------------------
// Dependencies
// -------------------------------------

// @if (check if dependency was imported) {
//   @error '`jigsass-objects-lists` has a dependency on `****`. Please import it.'
// }





// -------------------------------------
// Variables
// -------------------------------------

//





// -------------------------------------
// Functions
// -------------------------------------

//





// -------------------------------------
// Mixins
// -------------------------------------

//





// -------------------------------------
// Definitions
// -------------------------------------

@include jigsass-define-object(o-bare-list) {
  @include jigsass-classname() {
    list-style: none;
    $_doclet: $jigsass-obj-current-name + ($jigsass-obj-current-modifier or '');
    @if (not index($_doclet-store, $_doclet)) {
      // stylelint-disable
  /* ---
  section: Lists
  title: Bare List
  order: 1
  ---
  Strip lists of their default decoration (bullets, numbers, etc.) and spacing.


  #### include with:
  ```scss
  @include jigsass-list(bare[$modifier, $from, $until, $misc]);
  ```


  #### Related Mixins:
  [jigsass-list](#list-mixin): Generates a list abstraction or an abstraction's modifier,
  optionally limited to a specific breakpoint defined in
  [$jigsass-breakpoints](https://txhawks.github.io/jigsass-tools-mq/#variable-jigsass-breakpoints)).


  #### Usage example:
  ```example:html
  <ul class='bare-list'>
    <li>item 1</li>
    <li>item 2</li>
    <li>item 3</li>
    <li>item 4</li>
    <li>item 5</li>
  </ul>
  ```

  ```scss
  // --- In Sass --- //
  @include jigsass-list(bare);
  ```

  ** CSS output: **

  ```scss
  // --- CSS --- //
  .o-bare-list {
    list-style: none;
  }
  ```
  */
      //stylelint-enable
      $_doclet-store: append($_doclet-store, $_doclet) !global;
    }
  }
}
